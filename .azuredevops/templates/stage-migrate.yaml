parameters:
- name: StageName
  type: string
  default: MigrateStage

- name: SourceAdoRepo
  displayName: Source ADO Repo to migrate/sync
  type: string

- name: TargetGitHubRepo
  displayName: Target GitHub Repo
  type: string
  
- name: Mode
  displayName: Operating mode
  type: string
  values: 
  - synchronize
  - migrate
  - simulate
  default: simulate

- name: RenamePrefix
  displayName: Pefix to use when renaming repos
  type: string
  default: ''

- name: GitHubOrganizationName
  displayName: Target GitHub organisation
  type: string

- name: GitHubServiceConnection
  displayName: Service Connection to GitHub
  type: string

- name: Trunk
  displayName: Trunk name
  type: string
  default: main

- name: WindowsHostedAgentPool 
  displayName: Which Windows hosted agent pool to use
  type: string
  default: windows-latest

- name: UbuntuHostedAgentPool 
  displayName: Which Ubuntu hosted agent pool to use
  type: string
  default: ubuntu-latest

- name: AllPipelinesJsonArtifactName
  displayName: Name of artifact holding the information on the pipelines
  type: string
  default: AllPipelinesJson

- name: GitLeaksFailureAsWarning
  displayName: Treat GitLeaks Failure as Warning
  type: boolean
  default: false

- name: AdoOrganizationUrl
  type: string
  default: '$(System.CollectionUri)'

- name: AdoTeamProject
  type: string
  default: '$(System.TeamProject)'

- name: AdoAccessToken
  type: string
  default: '$(System.AccessToken)'

- name: DependsOn
  type: object
  default: ''

stages:
- stage: ${{ parameters.StageName }}
  displayName: ${{ parameters.Mode }} ${{ parameters.SourceAdoRepo }}
  dependsOn: ${{ parameters.DependsOn }}
  jobs: 
  - ${{ if ne(parameters.Mode, 'synchronize') }}:
    - template: job-setbranchstate.yaml
      parameters:
        JobName: LockBranchesJob${{ replace( parameters.SourceAdoRepo, '-', '') }}
        DependsOn: ''
        HostedAgentPool: ${{ parameters.ubuntuHostedAgentPool }}
        AdoOrganizationUrl: ${{ parameters.AdoOrganizationUrl }}
        AdoTeamProject: ${{ parameters.AdoTeamProject }}
        AdoAccessToken: ${{ parameters.AdoAccessToken }}
        Repo: ${{ parameters.SourceAdoRepo }}
        State: 'locked'
        Branch: ''
        WhatIf: ${{ eq(parameters.Mode, 'simulate') }}

  - template: job-synccontent.yaml
    parameters:
      JobName: SyncContentJob${{ replace( parameters.SourceAdoRepo, '-', '') }}
      ${{ if eq(parameters.Mode, 'migrate') }}:
        DependsOn: LockBranchesJob${{ replace( parameters.SourceAdoRepo, '-', '') }}
      ${{ else }}:
        DependsOn: ''
      HostedAgentPool: ${{ parameters.windowsHostedAgentPool }}
      GitLeaksReportArtifactName: GitLeaks-${{ parameters.SourceAdoRepo }}
      GitLeaksFailureAsWarning: ${{ parameters.GitLeaksFailureAsWarning }}
      GitLeaksReportFormat: json
      GitLeaksSuppressHistoryCheck: true
      GitLeaksReportPublishOnlyOnFail: true
      SourceAdoRepo: ${{ parameters.SourceAdoRepo }}
      TargetGitHubRepo: ${{ parameters.TargetGitHubRepo }}
      WhatIf: ${{ eq(parameters.Mode, 'simulate') }}
      Trunk: ${{ parameters.Trunk }}

  - template: job-syncrepopipelines.yaml
    parameters:
      JobName: SyncPipelinesJob${{ replace( parameters.SourceAdoRepo, '-', '') }}
      ${{ if ne(parameters.Mode, 'synchronize') }}:
        DependsOn: LockBranchesJob${{ replace( parameters.SourceAdoRepo, '-', '') }}
      ${{ else }}:
        DependsOn: ''
      HostedAgentPool: ${{ parameters.ubuntuHostedAgentPool }}
      AdoOrganizationUrl: ${{ parameters.AdoOrganizationUrl }}
      AdoTeamProject: ${{ parameters.AdoTeamProject }}
      AdoAccessToken: ${{ parameters.AdoAccessToken }}
      PipelinesJsonArtifactName: ${{ parameters.AllPipelinesJsonArtifactName }}
      PipelineSecretsArtifactName: PipelineVarSecrets-${{ parameters.TargetGitHubRepo }}
      GitHubOrganizationName: ${{ parameters.GitHubOrganizationName }}
      GitHubServiceConnection: ${{ parameters.GitHubServiceConnection }}
      SourceAdoRepo: ${{ parameters.SourceAdoRepo }}
      TargetGitHubRepo: ${{ parameters.TargetGitHubRepo }}
      WhatIf: ${{ eq(parameters.Mode, 'simulate') }}

  - ${{ if ne(parameters.Mode, 'synchronize') }}:
    - template: job-setpullrequeststate.yaml
      parameters:
        JobName: AbandonPullRequestsJob${{ replace( parameters.SourceAdoRepo, '-', '') }}
        DependsOn: 
        - SyncPipelinesJob${{ replace( parameters.SourceAdoRepo, '-', '') }}
        - SyncContentJob${{ replace( parameters.SourceAdoRepo, '-', '') }}
        HostedAgentPool: ${{ parameters.ubuntuHostedAgentPool }}
        AdoOrganizationUrl: ${{ parameters.AdoOrganizationUrl }}
        AdoTeamProject: ${{ parameters.AdoTeamProject }}
        AdoAccessToken: ${{ parameters.AdoAccessToken }}
        Repo: ${{ parameters.SourceAdoRepo }}
        State: abandoned
        PullRequestId: 0
        WhatIf: ${{ eq(parameters.Mode, 'simulate') }}

    - ${{ if ne(parameters.RenamePrefix, '') }}:
      - template: job-renamerepo.yaml
        parameters:
          JobName: RenameRepoJob${{ replace( parameters.SourceAdoRepo, '-', '') }}
          DependsOn: 
          - SyncPipelinesJob${{ replace( parameters.SourceAdoRepo, '-', '') }}
          - SyncContentJob${{ replace( parameters.SourceAdoRepo, '-', '') }}
          - AbandonPullRequestsJob${{ replace( parameters.SourceAdoRepo, '-', '') }}
          AdoOrganizationUrl: ${{ parameters.AdoOrganizationUrl }}
          AdoTeamProject: ${{ parameters.AdoTeamProject }}
          AdoAccessToken: ${{ parameters.AdoAccessToken }}
          HostedAgentPool: ${{ parameters.ubuntuHostedAgentPool }}
          OldRepoName: '${{ parameters.SourceAdoRepo }}'
          NewRepoName: '${{ parameters.RenamePrefix }}${{ parameters.SourceAdoRepo }}'
          WhatIf: ${{ eq(parameters.Mode, 'simulate') }}

    - template: job-setbranchstate.yaml
      parameters:
        JobName: UnlockBranchesJob${{ replace( parameters.SourceAdoRepo, '-', '') }}
        DependsOn: 
        - SyncPipelinesJob${{ replace( parameters.SourceAdoRepo, '-', '') }}
        - SyncContentJob${{ replace( parameters.SourceAdoRepo, '-', '') }}
        HostedAgentPool: ${{ parameters.ubuntuHostedAgentPool }}
        AdoOrganizationUrl: ${{ parameters.AdoOrganizationUrl }}
        AdoTeamProject: ${{ parameters.AdoTeamProject }}
        AdoAccessToken: ${{ parameters.AdoAccessToken }}
        Repo: ${{ parameters.SourceAdoRepo }}
        State: 'unlocked'
        Branch: ''
        WhatIf: ${{ eq(parameters.Mode, 'simulate') }}
        Condition: failed()

# need to generate reports
# - report the presence of secrets on the target pipeline (because these will not be populated by the automation)