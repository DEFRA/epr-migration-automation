parameters:
- name: Repos
  displayName: Repos to migrate/sync
  type: object

- name: Mode
  displayName: Operating mode
  type: string
  values: 
  - Synchronize
  - Migrate

- name: GitHubOrganizationName
  displayName: Target GitHub organisation
  type: string

- name: GitHubServiceConnection
  displayName: Service Connection to GitHub
  type: string

- name: WhatIf
  displayName: What If
  type: boolean
  default: true

- name: Trunk
  displayName: Trunk name
  type: string
  default: main

- name: WindowsHostedAgentPool 
  displayName: Which Windows hosted agent pool to use
  type: string
  default: windows-latest

- name: UbuntuHostedAgentPool 
  displayName: Which Ubuntu hosted agent pool to use
  type: string
  default: ubuntu-latest

- name: AllPipelinesJsonArtifactName
  displayName: Name of artifact holding the information on the pipelines
  type: string
  default: AllPipelines

stages:
- stage: DisableSourceReposStage
  condition: ${{ eq (parameters.Mode, 'Migration') }}
  displayName: Lock Source
  dependsOn: ''
  jobs: 
  - ${{ each repo in parameters.Repos }}:
    - template: job-disablerepos.yaml
      parameters:
        JobBaseName: DisableRepoJob
        DependsOn: ''
        HostedAgentPool: ${{ parameters.ubuntuHostedAgentPool }}
        Repo: ${{ repo }}
        WhatIf: ${{ parameters.WhatIf }}

- stage: SyncRepoContentsStage
  displayName: Sync Repo Contents
  dependsOn: 
  - MigrationStartStage
  jobs: 
  - ${{ each repo in parameters.Repos }}:
    - template: job-synccontent.yaml
      parameters:
        JobBaseName: SyncContentJob
        DependsOn: ''
        HostedAgentPool: ${{ parameters.windowsHostedAgentPool }}
        Repo: ${{ repo }}
        WhatIf: ${{ parameters.WhatIf }}
        Trunk: ${{ parameters.Trunk }}

- stage: GetPipelineInfoStage
  displayName: "Gather Pipeline Info"
  dependsOn: ''
  jobs:
  - template: job-getpipelines.yaml
    parameters:
      JobName: GetPipelinesJsonJob
      DependsOn: ''
      HostedAgentPool: ${{ parameters.UbuntuHostedAgentPool }}
      AdoOrganizationUrl: $(System.CollectionUri)
      AdoTeamProject: $(System.TeamProject)
      AdoAccessToken: $(System.AccessToken)
      PipelinesJsonArtifactName: ${{ parameters.AllPipelinesJsonArtifactName }}
      Type2Only: true
      EnabledOnly: true
      HostingRepoType: TfsGit

- stage: SyncPipelinesStage
  displayName: "Sync Pipelines"
  dependsOn: 
  - GetPipelineInfoStage
  jobs:
  - ${{ each repo in parameters.Repos }}:
    - template: job-syncrepopipelines.yaml
      parameters:
        DependsOn: ''
        HostedAgentPool: ${{ parameters.ubuntuHostedAgentPool }}
        AdoOrganizationUrl: $(System.CollectionUri)
        AdoTeamProject: $(System.TeamProject)
        AdoAccessToken: $(System.AccessToken)
        PipelinesJsonArtifactName: ${{ parameters.AllPipelinesJsonArtifactName }}
        GitHubOrganizationName: ${{ parameters.GitHubOrganizationName }}
        GitHubServiceConnection: ${{ parameters.GitHubServiceConnection }}
        Repo: ${{ repo }}
        WhatIf: ${{ parameters.WhatIf }}

- stage: DisablePipelinesStage
  condition: ${{ eq (parameters.Mode, 'Migration') }}
  displayName: Disable Pipelines
  dependsOn: 
  - GetPipelineInfoStage
  - SyncPipelinesStage
  jobs: 
  - ${{ each repo in parameters.Repos }}:
    - template: job-disablepipelines.yaml
      parameters:
        JobBaseName: DisablePipelinesJob
        DependsOn: ''
        HostedAgentPool: ${{ parameters.ubuntuHostedAgentPool }}
        Repo: ${{ repo }}
        WhatIf: ${{ parameters.WhatIf }}

- stage: RenameReposStage
  condition: ${{ eq (parameters.Mode, 'Migration') }}
  displayName: Rename Repos
  dependsOn: 
  - SyncRepoContentsStage
  - SyncPipelinesStage
  jobs: 
  - ${{ each repo in parameters.Repos }}:
    - template: job-renamerepo.yaml
      parameters:
        JobBaseName: RenameRepoJob
        DependsOn: ''
        HostedAgentPool: ${{ parameters.ubuntuHostedAgentPool }}
        Repo: ${{ repo }}
        WhatIf: ${{ parameters.WhatIf }}

# need to generate reports
# - report the presence of secrets on the target pipeline (because these will not be populated by the automation)