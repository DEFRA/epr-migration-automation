parameters:
- name: Repos
  displayName: Repos to migrate/sync
  type: object

- name: Mode
  displayName: Operating mode
  type: string
  values: 
  - Synchronize
  - Migrate

- name: GitHubOrganizationName
  displayName: Target GitHub organisation
  type: string

- name: GitHubServiceConnection
  displayName: Service Connection to GitHub
  type: string

- name: WhatIf
  displayName: What If
  type: boolean
  default: true

- name: Trunk
  displayName: Trunk name
  type: string
  default: main

- name: WindowsHostedAgentPool 
  displayName: Which Windows hosted agent pool to use
  type: string
  default: windows-latest

- name: UbuntuHostedAgentPool 
  displayName: Which Ubuntu hosted agent pool to use
  type: string
  default: ubuntu-latest

- name: AllPipelinesJsonArtifactName
  displayName: Name of artifact holding the information on the pipelines
  type: string
  default: AllPipelines

- name: AdoOrganizationUrl
  type: string
  default: '$(System.CollectionUri)'
- name: AdoTeamProject
  type: string
  default: '$(System.TeamProject)'
- name: AdoAccessToken
  type: string
  default: '$(System.AccessToken)'

stages:
- ${{ if eq(parameters.Mode, 'Migration') }}:
  - stage: DisableSourceReposStage
    displayName: Lock Source
    dependsOn: ''
    jobs: 
    - ${{ each repo in parameters.Repos }}:
      - template: job-disablerepo.yaml
        parameters:
          JobName: DisableRepoJob${{ replace( repo, '-', '') }}
          DependsOn: ''
          HostedAgentPool: ${{ parameters.ubuntuHostedAgentPool }}
          AdoOrganizationUrl: ${{ parameters.AdoOrganizationUrl }}
          AdoTeamProject: ${{ parameters.AdoTeamProject }}
          AdoAccessToken: ${{ parameters.AdoAccessToken }}
          Repo: ${{ repo }}
          WhatIf: ${{ parameters.WhatIf }}

- stage: SyncRepoContentsStage
  displayName: Sync Repo Contents
  dependsOn: 
  - ${{ if eq(parameters.Mode, 'Migration') }}:
    - DisableSourceReposStage
  jobs: 
  - ${{ each repo in parameters.Repos }}:
    - template: job-synccontent.yaml
      parameters:
        JobName: SyncContentJob${{ replace( repo, '-', '') }}
        DependsOn: ''
        HostedAgentPool: ${{ parameters.windowsHostedAgentPool }}
        Repo: ${{ repo }}
        WhatIf: ${{ parameters.WhatIf }}
        Trunk: ${{ parameters.Trunk }}

- stage: GetPipelineInfoStage
  displayName: "Gather Pipeline Info"
  dependsOn: 
  - ${{ if eq(parameters.Mode, 'Migration') }}:
    - DisableSourceReposStage
  jobs:
  - template: job-getpipelines.yaml
    parameters:
      JobName: GetPipelinesJsonJob
      DependsOn: ''
      HostedAgentPool: ${{ parameters.UbuntuHostedAgentPool }}
      AdoOrganizationUrl: ${{ parameters.AdoOrganizationUrl }}
      AdoTeamProject: ${{ parameters.AdoTeamProject }}
      AdoAccessToken: ${{ parameters.AdoAccessToken }}
      PipelinesJsonArtifactName: ${{ parameters.AllPipelinesJsonArtifactName }}
      Type2Only: true
      EnabledOnly: true
      HostingRepoType: TfsGit

- stage: SyncPipelinesStage
  displayName: "Sync Pipelines"
  dependsOn: 
  - GetPipelineInfoStage
  jobs:
  - ${{ each repo in parameters.Repos }}:
    - template: job-syncrepopipelines.yaml
      parameters:
        JobName: SyncPipelinesJob${{ replace( repo, '-', '') }}
        DependsOn: ''
        HostedAgentPool: ${{ parameters.ubuntuHostedAgentPool }}
        AdoOrganizationUrl: ${{ parameters.AdoOrganizationUrl }}
        AdoTeamProject: ${{ parameters.AdoTeamProject }}
        AdoAccessToken: ${{ parameters.AdoAccessToken }}
        PipelinesJsonArtifactName: ${{ parameters.AllPipelinesJsonArtifactName }}
        GitHubOrganizationName: ${{ parameters.GitHubOrganizationName }}
        GitHubServiceConnection: ${{ parameters.GitHubServiceConnection }}
        Repo: ${{ repo }}
        WhatIf: ${{ parameters.WhatIf }}

- ${{ if eq(parameters.Mode, 'Migration') }}:
  - stage: DisablePipelinesStage
    displayName: Disable Pipelines
    dependsOn: 
    - GetPipelineInfoStage
    - SyncPipelinesStage
    jobs: 
    - ${{ each repo in parameters.Repos }}:
      - template: job-disablepipelines.yaml
        parameters:
          JobName: DisablePipelinesJob${{ replace( repo, '-', '') }}
          DependsOn: ''
          HostedAgentPool: ${{ parameters.ubuntuHostedAgentPool }}
          Repo: ${{ repo }}
          WhatIf: ${{ parameters.WhatIf }}

  - stage: RenameReposStage
    condition: ${{ eq (parameters.Mode, 'Migration') }}
    displayName: Rename Repos
    dependsOn: 
    - SyncRepoContentsStage
    - SyncPipelinesStage
    jobs: 
    - ${{ each repo in parameters.Repos }}:
      - template: job-renamerepo.yaml
        parameters:
          JobName: RenameRepoJob${{ replace( repo, '-', '') }}
          DependsOn: ''
          HostedAgentPool: ${{ parameters.ubuntuHostedAgentPool }}
          Repo: ${{ repo }}
          WhatIf: ${{ parameters.WhatIf }}

# need to generate reports
# - report the presence of secrets on the target pipeline (because these will not be populated by the automation)